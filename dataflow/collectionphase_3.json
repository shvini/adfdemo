{
	"name": "collectionphase_3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText9",
						"type": "DatasetReference"
					},
					"name": "collectiondata"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText10",
						"type": "DatasetReference"
					},
					"name": "duedata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText11",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "unpivot1"
				},
				{
					"name": "unpivot2"
				},
				{
					"name": "join1"
				},
				{
					"name": "select",
					"description": "select only loan id, collection date, collection amount and due amount from join table"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Loan ID} as string,",
				"          {Mar-19} as string,",
				"          {Apr-19} as string,",
				"          {May-19} as string,",
				"          {Jun-19} as string,",
				"          {Jul-19} as string,",
				"          {Aug-19} as string,",
				"          {Sep-19} as string,",
				"          {Oct-19} as string,",
				"          {Nov-19} as string,",
				"          {Dec-19} as string,",
				"          {Jan-20} as string,",
				"          {Feb-20} as string,",
				"          {Mar-20} as string,",
				"          {Apr-20} as string,",
				"          {May-20} as string,",
				"          {Jun-20} as string,",
				"          {Jul-20} as string,",
				"          {Aug-20} as string,",
				"          {Sep-20} as string,",
				"          {Oct-20} as string,",
				"          {Nov-20} as string,",
				"          {Dec-20} as string,",
				"          {Jan-21} as string,",
				"          {Feb-21} as string,",
				"          {Mar-21} as string,",
				"          {Apr-21} as string,",
				"          {May-21} as string,",
				"          {Jun-21} as string,",
				"          {Jul-21} as string,",
				"          {Aug-21} as string,",
				"          {Sep-21} as string,",
				"          {Oct-21} as string,",
				"          {Nov-21} as string,",
				"          {Dec-21} as string,",
				"          {Jan-22} as string,",
				"          {Feb-22} as string,",
				"          {Mar-22} as string,",
				"          {Apr-22} as string,",
				"          {May-22} as string,",
				"          {Jun-22} as string,",
				"          {Jul-22} as string,",
				"          {Aug-22} as string,",
				"          {Sep-22} as string,",
				"          {Oct-22} as string,",
				"          {Nov-22} as string,",
				"          {Dec-22} as string,",
				"          {Jan-23} as string,",
				"          {Feb-23} as string,",
				"          {Mar-23} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> collectiondata",
				"source(output(",
				"          {Loan ID} as string,",
				"          {Mar-19} as string,",
				"          {Apr-19} as string,",
				"          {May-19} as string,",
				"          {Jun-19} as string,",
				"          {Jul-19} as string,",
				"          {Aug-19} as string,",
				"          {Sep-19} as string,",
				"          {Oct-19} as string,",
				"          {Nov-19} as string,",
				"          {Dec-19} as string,",
				"          {Jan-20} as string,",
				"          {Feb-20} as string,",
				"          {Mar-20} as string,",
				"          {Apr-20} as string,",
				"          {May-20} as string,",
				"          {Jun-20} as string,",
				"          {Jul-20} as string,",
				"          {Aug-20} as string,",
				"          {Sep-20} as string,",
				"          {Oct-20} as string,",
				"          {Nov-20} as string,",
				"          {Dec-20} as string,",
				"          {Jan-21} as string,",
				"          {Feb-21} as string,",
				"          {Mar-21} as string,",
				"          {Apr-21} as string,",
				"          {May-21} as string,",
				"          {Jun-21} as string,",
				"          {Jul-21} as string,",
				"          {Aug-21} as string,",
				"          {Sep-21} as string,",
				"          {Oct-21} as string,",
				"          {Nov-21} as string,",
				"          {Dec-21} as string,",
				"          {Jan-22} as string,",
				"          {Feb-22} as string,",
				"          {Mar-22} as string,",
				"          {Apr-22} as string,",
				"          {May-22} as string,",
				"          {Jun-22} as string,",
				"          {Jul-22} as string,",
				"          {Aug-22} as string,",
				"          {Sep-22} as string,",
				"          {Oct-22} as string,",
				"          {Nov-22} as string,",
				"          {Dec-22} as string,",
				"          {Jan-23} as string,",
				"          {Feb-23} as string,",
				"          {Mar-23} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> duedata",
				"collectiondata unpivot(output(",
				"          {coll date} as date,",
				"          {collection amount} as string",
				"     ),",
				"     ungroupBy({Loan ID}),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot1",
				"duedata unpivot(output(",
				"          {coll date} as date,",
				"          {due amount} as string",
				"     ),",
				"     ungroupBy({Loan ID}),",
				"     lateral: true,",
				"     ignoreNullPivots: false) ~> unpivot2",
				"unpivot1, unpivot2 join(unpivot1@{Loan ID} == unpivot2@{Loan ID}",
				"     && unpivot1@{coll date} == unpivot2@{coll date},",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 select(mapColumn(",
				"          {Loan ID} = unpivot1@{Loan ID},",
				"          {coll date} = unpivot1@{coll date},",
				"          {collection amount},",
				"          {due amount}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select",
				"select sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          {Loan ID} as string,",
				"          {Collection Date} as string,",
				"          {Collection Amount} as string,",
				"          {due Amount} as string",
				"     ),",
				"     partitionFileNames:['collectionphase3.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}